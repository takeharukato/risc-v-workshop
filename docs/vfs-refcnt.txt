データ構造間の参照について

データ構造型-制御表名[ポインタで指しているデータ構造の参照カウンタ変数名]->ポインタで指しているデータ構造の型
という形式でデータ構造間の参照カウンタの関係は以下のようになる

vfs_ioctx
  -ioc_fds[f_refs]->file_descriptor
  -f_vn[v_refs]->vnode
  -v_mount[m_refs]->fs_mount
  -m_fs[c_refs]->fs_container


各データ構造は, 生成時に参照カウンタ1で生成され, それぞれのデータ構造の制御表からの
参照として扱われる. また, データ構造を制御表に登録した時点で制御表への参照カウンタを
加算する.

データ構造の制御表には以下がある

vfs_ioctx プロセス管理情報毎に用意されるファイルディスクリプタの制御表を格納したデータ構造.
          プロセス管理情報の参照カウンタが0になった時点でプロセス管理情報とともに解放される

	  ファイルのオープン時にファイルディスクリプタを生成し, ファイルディスクリプタの
	  制御表に登録する また, ファイルディスクリプタの複製時にファイルディスクリプタへの
	  参照カウンタを加算する

	  ファイルのオープン時にオープン対象のv-nodeへの参照を加算する

	  ファイルディスクリプタのclose時にファイルディスクリプタへの
	  参照カウンタを減算し, 参照カウンタが0になったら, ファイルディスクリプタが
	  参照しているv-nodeの参照カウンタを減算する

          ** 本来は上記に加えて, v-nodeを参照している最後のファイルディスクリプタ
	  クローズ時にv-nodeを書き戻すためのカウンタが必要
	  クローズ時にv-nodeを書き戻すためのカウンタはv-node生成時に0で初期化し,
	  ファイルディスクリプタからの参照時に加算する必要がある
	  このためv-nodeのmutexをとって加算、減算する(アトミックカウンタではない)。

file_descriptor vfs_ioctx内のioc_fdsがファイルディスクリプタ制御表である

vnode     fs_mount内のm_head(v-nodeテーブル)がv-nodeの制御表である
	  v-node生成時にv-node制御表にv-nodeを登録し, マウント情報への参照カウンタを
	  加算する.
	  v-nodeの参照カウンタが0になるとv-node制御表からv-nodeを取り除き,
	  マウント情報への参照カウンタを減算する

fs_mount  g_mnttbl大域変数がマウント情報の制御表である.
          マウント情報への参照カウンタが0になるとマウント情報の制御表から
	  マウント情報を取り除く

	  マウント情報生成時にg_mnttbl大域変数のfs_containerへの参照を加算する。
	  マウント情報への参照カウンタが0になったら, g_mnttbl大域変数のfs_containerへの
	  参照を減算する。

fs_container g_fstbl大域変数がファイルシステムコンテナ情報の制御表である.
             ファイルシステムコンテナ情報への参照カウンタが0になったら
	     ファイルシステムコンテナ情報の制御表からファイルシステムコンテナ情報を
	     取り除く
	     ファイルシステムコンテナ情報への参照カウンタは, ファイルシステム登録時に1に
	     初期化される。
	     ファイルシステムの登録抹消後で, かつ, ファイルシステムの利用者がいなくなった
	     (通常はマウントポイント情報からの参照がなくなった)時点で, ファイルシステム
	     コンテナ情報を解放する
