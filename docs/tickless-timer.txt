  - ティックレス
    a) 次回のタイマプログラム時の時刻(次のタイマ割込み発生時刻のMTIME-ブート時のMTIME)を
    b) タイムスペックに換算(us=>timespec)し, 次回のタイマプログラム時の時刻をtimespecで求める
    c)  未処理のハンドラで最も直近のものからtimespecを取得しb)+レイテンシよりも大きい
        最初のエントリを得る
    d) で得たtimespecをmtimeに変換 = timespecのマイクロ秒換算値 
    e) で得た値から次回のタイマ時刻を減算した値をtimer_interval_cycに代入
基本的な考え方
[1] uptime時刻とコールアウト時刻を細粒度(timespec)で管理する
    (1) 起動時のハードウエア時刻を記録しておく

[2] タイマ割込み時の時刻更新処理
    (1) 前回保存したハードウエア現在時刻(タイマ割込み受け付け時の時刻)を読み込む
    (2) ハードウエア現在時刻(タイマ割込み受け付け時の時刻)を取得して保存する
    (3) 現在時刻に加算する経過時間を算出( (2)から(1)を引く )して保存しておく
    (4) 次の割込み時刻を大域変数から読み出す
    (5) (2)に(4)を加算した値を算出
    (6) TIMECMPに(5)の値を書き込む
    (7) Supervisorに通知する

[3] タイマ割込みスーパバイザ処理
    (1) 現在時刻を更新する ([2]の(3)の時刻をtimespec換算に変換して時刻に加算する)
    (2) calloutを呼び出す
    (3) 次のタイマを設定する

[4] 次のタイマを設定する
    (1) 現在設定されているタイマ通知時刻を算出する
        [2]の(2)と(4) (いずれも大域変数の格納値)を加算した値を算出する
    (2) (1)の値をtimespecに換算した値に変換
    (3) (2)の値より大きいなかで最小の起動時間を持つコールアウトを見つける
    (4) (3)の呼び出し時刻をハードウエア時刻に変換する
    (5) (4)の値を大域変数の次の割込み時刻に設定する
