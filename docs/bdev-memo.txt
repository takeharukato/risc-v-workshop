ブロックデバイス機構

[1] 論理モジュール
1. VFSページI/O機構 (別紙)
2. ブロックデバイス管理
3. ブロックバッファ管理 (別紙)
4. ブロックI/O管理 (別紙)

[2] データ構造
/**
   ブロックデバイスエントリ
*/
typedef struct _bdev_entry{
	spinlock                                bdent_lock; /**< ロック                    */
	struct _refcounter                      bdent_refs; /**< 参照カウンタ              */
	RB_ENTRY(_bdev_entry)                    bdent_ent; /**< ブロックデバイスエントリ  */
	dev_id                                 bdent_devid; /**< デバイスID                */
	/** デバイスのブロック長(単位:バイト) */
	size_t                                bdent_blksiz;
	/** デバイスの容量(単位:バイト) */
	size_t                              bdent_capacity;
	struct _queue                           bdent_rque; /**< リクエストキュー          */
	struct _fs_calls                       bdent_calls; /**< ファイル操作IF            */
	struct _vfs_page_cache_pool            *bdent_pool; /**< ページキャッシュプール    */
	bdev_private                         bdent_private; /**< デバイス固有情報          */
}bdev_entry;

/**
   ブロックデバイスDB構造体
*/
typedef struct _bdev_db{
	spinlock                         bdev_lock;  /**< ロック                   */
	RB_HEAD(_bdev_tree, _bdev_entry) bdev_head;  /**< ブロックデバイスDB       */
}bdev_db;

[3] データ構造アクセス手順
1. ブロックデバイスDBがブロックデバイスエントリのコンテナ

2. デバイスIDをキーとして, ブロックデバイスエントリへの参照を得てからアクセスし,
   使用終了時に参照を解放

3. 生成時にブロックデバイスDBからブロックデバイスエントリへの参照をセット

4. 破棄時は, ブロックデバイスDBからブロックデバイスエントリを取り除いてから
   ブロックデバイスDBからブロックデバイスエントリへの参照を解放する

[4] 外部IF
1. ブロックデバイス管理機構の初期化

2. ブロックデバイス管理機構の終了
3.
[5] モジュール間IF

int
block_buffer_get(dev_id devid, dev_blkno blkno, block_buffer **bufp)
は, bdev内でブロックバッファのツリーを管理するように修正する.
ブロックバッファの数だけページキャシュの参照を加算
invalidate_block_bufferで, ページキャシュの参照を減算し, バッファキャッシュの解放を行う

int block_buffer_map_to_page_cache(dev_id _devid, struct _vfs_page_cache *_pc);
のIFを修正し,
int block_buffer_map_to_page_cache(dev_id _devid, dev_blkno blkno,
    struct _vfs_page_cache *_pc);
に変更, devidとblknoからブロックのデバイス中での絶対アドレスを算出, ページ内オフセット位置から
ページキャッシュ中での連番を算出するまでは同じだが, ブロックバッファ内にブロックのデバイス中での絶対アドレスも格納しておき, bdev内でブロックバッファのツリーの索引として使用する

int vfs_page_cache_block_buffer_find(struct _vfs_page_cache *_pc, size_t _offset,
    struct _block_buffer **_bufp);
を廃止し, block_buffer_getでバッファを得るようにする
