* mutex/waitキュー操作を実装
  - スレッド管理実装後にTODOを消化し, mutexのテストを追加する
* ユーザページテーブルアロケート[済み]
  - カーネルVPN2のコピー[済み]
* ユーザページテーブルデアロケート[済み]
* hal_copy_kernel_pgtblから呼び出し元にロック獲得位置を変更[済み]
* atomic_add_fetch/atomic_sub_fetchを統計情報カウンタに置き換え[済み]
* カーネルエントリ時にベクタをカーネルベクタに設定[済み]
* ユーザページマップ関数[済み]
* ユーザページコピー関数[済み]
  - extract mapしてマップ先ページアドレスとサイズ、属性を得る
  - マネージドページについて同サイズでページを獲得
  - 同一仮想アドレスにマップ
* CPUのオフライン制御

* 割り込み管理共通部[済み]
* 割り込みコントローラ処理部[済み]
  - Platform-Level Interrupt Controller PLIC[済み]
  - Core-Local Interrupt Controller CLIC[済み]
    https://github.com/riscv/riscv-fast-interrupt/blob/master/clic.adoc
* タイマ有効化/シリアル割り込み確認[済み]
* コールアウトキューを時刻管理情報に移動しロック構成を単純化[済み]
* タイマ管理[済み]
* スレッド管理部
  - 優先度継承中にプライオリティを変更するために
    初期化時優先度
    ベース優先度
    実効優先度
    の3つを定義, プライオリティの変更はベース優先度に対して行う
* プロセス管理部(カーネルプロセス)
* スレッドタイマ(ラウンドロビン)
* プロセス管理部(ユーザプロセス)
* ELF
* テスト1回目(システムコールはデバッグ文字列出力のみ

* fileディスクリプタ管理
* ページキャッシュ管理[済み]
  - ページキャッシュ管理基本部[済み]
  - LRUサポート[済み]
* bdevレイヤでのページキャッシュ<->FSイメージのバッファコピー[済み]
* マウント管理
* vnodeキャッシュ管理
* minixfs
* デバイスIF
* 端末キュー
* init
* shell

* テスト2回目プロセスロード
