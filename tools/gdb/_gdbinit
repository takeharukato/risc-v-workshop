# -*- coding:utf-8 mode: gdb-script -*-
#
add-auto-load-safe-path ~/
define riscv64-setup
target remote localhost:1234
symbol-file kernel-dbg.elf
end

define load_symbol
file kernel-dbg.elf
symbol-file kernel-dbg.elf
end

define six
si
x /i $pc
end

# proc_show
# すべてのプロセスを表示する
# 使用例:
# (gdb) proc_show
define proc_show
  if (&g_procdb.head)->rbh_root == NULL
    return
  end
  rbtree_minmax &g_procdb.head ent -1
  set $show_tmp = $rbtree_minmax_retval
  while $show_tmp != NULL
    set $proc_id = ((struct _proc *)($show_tmp))->id
    set $proc_addr = ((struct _proc *)($show_tmp))
    set $proc_pgt = ((struct _proc *)($show_tmp))->pgt
    set $proc_master = ((struct _proc *)($show_tmp))->master
    set $proc_name = ((struct _proc *)($show_tmp))->name[0]
    set $proc_ioctx = ((struct _proc *)($show_tmp))->ioctx
    printf "Proc id=%u [%p] pgt:%p master-thread=%p name=%s ioctx=%p\n", $proc_id, $proc_addr, $proc_pgt, $proc_master, $proc_name, $proc_ioctx
    rbtree_next $show_tmp ent
    set $show_tmp = $rbtree_next_retval
  end
end

# thread_show
# すべてのスレッドを表示する
# 使用例:
# (gdb) thread_show
define thread_show
  if (&g_thrdb.head)->rbh_root == NULL
    return
  end
  rbtree_minmax &g_thrdb.head ent -1
  set $show_tmp = $rbtree_minmax_retval
  while $show_tmp != NULL
    set $thread_id = ((struct _thread *)($show_tmp))->id
    set $thread_addr = ((struct _thread *)($show_tmp))
    set $thread_state = ((struct _thread *)($show_tmp))->state
    set $thread_tinfo = ((struct _thread *)($show_tmp))->tinfo
    set $thread_ksp = ((struct _thread *)($show_tmp))->ksp
    set $thread_proc = ((struct _thread *)($show_tmp))->p
    printf "Thread id=%u [%p] state=%u thread-info=%p ksp=%p proc=%p\n", $thread_id, $thread_addr, $thread_state, $thread_tinfo, $thread_ksp, $thread_proc
    rbtree_next $show_tmp ent
    set $show_tmp = $rbtree_next_retval
  end
end

#
#赤黒木操作
#

# rbtree_show ヘッド名 rbtreeのエントリ名
# 赤黒木を表示する
# 使用例:
# (gdb) rbtree_show &g_thrdb.head ent
define rbtree_show
  rbtree_minmax $arg0 $arg1 -1
  set $show_tmp = $rbtree_minmax_retval
  while $show_tmp != NULL
    p $show_tmp
    rbtree_next $show_tmp $arg1
    set $show_tmp = $rbtree_next_retval
  end
end

# rbtree_left rbtreeの要素 rbtreeのエントリ名
# rbtreeの左の要素を得る
# $rbtree_left_retvalに対象の構造体へのアドレスが得られる
define rbtree_rb_left
  set $rbtree_rb_left_retval = ($arg0)->$arg1.rbe_left
end
# rbtree_right rbtreeの要素 rbtreeのエントリ名
# rbtreeの右の要素を得る
# $rbtree_right_retvalに対象の構造体へのアドレスが得られる
define rbtree_rb_right
  set $rbtree_rb_right_retval = ($arg0)->$arg1.rbe_right
end
# rbtree_parent rbtreeの要素 rbtreeのエントリ名
# rbtreeの親の要素を得る
# $rbtree_parent_retvalに対象の構造体へのアドレスが得られる
define rbtree_rb_parent
  set $rbtree_rb_parent_retval = ($arg0)->$arg1.rbe_parent
end
# rbtree_minmax ヘッド名 rbtreeのエントリ名 -1または1
# rbtreeの最小ノード, 最大ノードを得る
# 第3引数に-1を指定するとMIN, 1を指定するとMAXが得られる
# $rbtree_minmax_retvalに対象の構造体へのアドレスが得られる
# 使用例:
# (gdb) rbtree_minmax &g_thrdb.head ent -1
# (gdb) p $rbtree_minmax_retval
# $1 = (struct _thread *) 0x7fffecf73cf8
define rbtree_minmax
  set $tmp_rb_minmax = ($arg0)->rbh_root
  set $val = $arg2
  while $tmp_rb_minmax != NULL
    set $parent = $tmp_rb_minmax
    if $val < 0
      rbtree_rb_left $tmp_rb_minmax $arg1
      set $tmp_rb_minmax = $rbtree_rb_left_retval
    else
      rbtree_rb_right $tmp_rb_minmax $arg1
      set $tmp_rb_minmax = $rbtree_rb_right_retval
    end
    set $rbtree_minmax_retval = $parent
end

# rbtree_next rbtreeの要素 rbtreeのエントリ名
# rbtreeの次の要素を得る
# $rbtree_next $ent
# 使用例:
# (gdb) rbtree_minmax &g_thrdb.head ent -1
# (gdb) p $rbtree_minmax_retval
# $1 = (struct _thread *) 0x7fffecf73cf8
# (gdb) rbtree_next $rbtree_minmax_retval ent
# (gdb) p $rbtree_next_retval
# $2 = (struct _thread *) 0x7fffecf73ad0
define rbtree_next
  set $tmp_rbtree_next = $arg0
  rbtree_rb_right $tmp_rbtree_next $arg1
  if $rbtree_rb_right_retval != NULL
    rbtree_rb_right $tmp_rbtree_next $arg1
    set $tmp_rbtree_next = $rbtree_rb_right_retval
    rbtree_rb_left $tmp_rbtree_next $arg1
    while $rbtree_rb_left_retval != NULL
      rbtree_rb_left $tmp_rbtree_next $arg1
      set $tmp_rbtree_next = $rbtree_rb_left_retval
      rbtree_rb_left $tmp_rbtree_next $arg1
    end
  else
    rbtree_rb_parent $tmp_rbtree_next $arg1
    set $tmp_rbtree_next2 = $rbtree_rb_parent_retval
    if ( $tmp_rbtree_next2 != NULL )
      rbtree_rb_left $tmp_rbtree_next2 $arg1
      set $tmp_rbtree_next3 = $rbtree_rb_left_retval
    end
    if ( ( $tmp_rbtree_next2 != NULL ) && ( $tmp_rbtree_next == $tmp_rbtree_next3 ) )
      rbtree_rb_parent $tmp_rbtree_next $arg1
      set $tmp_rbtree_next = $rbtree_rb_parent_retval
    else
      rbtree_rb_parent $tmp_rbtree_next $arg1
      set $tmp_rbtree_next2 = $rbtree_rb_parent_retval
      if ( $tmp_rbtree_next2 != NULL )
	rbtree_rb_right $tmp_rbtree_next2 $arg1
	set $tmp_rbtree_next3 = $rbtree_rb_right_retval
      end
      while ( ( $tmp_rbtree_next2 != NULL ) && ( $tmp_rbtree_next == $tmp_rbtree_next3 ) )
	rbtree_rb_parent $tmp_rbtree_next $arg1
	set $tmp_rbtree_next = $rbtree_rb_parent_retval

        rbtree_rb_parent $tmp_rbtree_next $arg1
        set $tmp_rbtree_next2 = $rbtree_rb_parent_retval
	if $tmp_rbtree_next2 != NULL
          rbtree_rb_right $tmp_rbtree_next2 $arg1
          set $tmp_rbtree_next3 = $rbtree_rb_right_retval
	end
      end
      rbtree_rb_parent $tmp_rbtree_next $arg1
      set $tmp_rbtree_next = $rbtree_rb_parent_retval
    end
  end
  set $rbtree_next_retval = $tmp_rbtree_next
end

# rbtree_foreach rbtreeの要素 rbtreeのエントリ名
# rbtreeを順にたどる
# rbtree_foreach &g_thrdb.head ent
# 使用例:
define rbtree_foreach
  rbtree_minmax $arg0 $arg1 -1
  set $cur_node = $rbtree_minmax_retval
  while $cur_node != NULL
    printf "now:%p\n", $cur_node
    rbtree_next $cur_node $arg1
    set $cur_node = $rbtree_next_retval
    printf "next:%p\n", $cur_node
  end
end
